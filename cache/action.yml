name: Load/Save cache using cloud storage
author: Yuki Furuta
description: Load/Save cache using cloud storage

inputs:
  method:
    description: "'load', 'save' or 'clear'"
    required: true
  path:
    description: Path to directory to load/save cache relative to $GITHUB_WORKSPACE. Required for 'load' and 'save' method
    default: ''
  bucket:
    description: Bucket name to be used in storage
    required: true
  key:
    description: Key to the cache (id of the save action). Required for load method
    default: '${{ github.action }}'
    required: true
  include:
    description: Include files that matches to the parameter.
    default: "**"
  exclude:
    description: Exclude files that matches to the parameter. Leave it blank if all files are included
    default: '.'
  storage_class:
    description: Storage class to be used in storage
    default: "ONEZONE_IA"
    required: true

runs:
  using: composite
  steps:
    - name: ${{ inputs.method }} cache
      shell: bash
      run: |
        PREFIX=${{ github.repository }}/${{ github.ref_name }}
        KEY=${PREFIX}/${{ inputs.key }}

        if [ "${{ inputs.method }}" = "clear" ]; then
          if [ "${{ inputs.key }}" = "all" ]; then
            aws s3 rm --recursive s3://${{ inputs.bucket }}/${PREFIX}
          else
            aws s3 rm s3://${{ inputs.bucket }}/${KEY}.tar.gz
          fi
          exit 0
        fi

        if [ -z "${{ inputs.path }}" ]; then
          echo "Input parameter 'path' is empty"
          exit 1
        fi
        mkdir -p ${{ inputs.path }} && cd ${{ inputs.path }}
        if [ "${{ inputs.method }}" = "save" ]; then
          NUM_TARGETS=$(find . -iwholename './${{ inputs.include }}' -not -iwholename './${{ inputs.exclude }}' | wc -l)
          if [ ${NUM_TARGETS} -gt 0 ]; then
            find . -iwholename './${{ inputs.include }}' -not -iwholename './${{ inputs.exclude }}' -print0 | tar -I pigz -c --null -T - | aws s3 cp --storage-class ${{ inputs.storage_class }} - s3://${{ inputs.bucket }}/${KEY}.tar.gz
            echo "${NUM_TARGETS} files/directories were saved to ${KEY}"
          else
            echo "No data found to save to ${KEY}"
          fi
        elif [ "${{ inputs.method }}" = "load" ]; then
          TARGET=$(aws s3 ls s3://${{ inputs.bucket }}/${KEY}.tar.gz || echo)
          if [ -n "${TARGET}" ]; then
            aws s3 cp s3://${{ inputs.bucket }}/${KEY}.tar.gz - | tar -I pigz -x .
            echo "Cache were loaded from ${KEY}"
            tree -a -I .git
          else
            echo "No cache found to load from %{KEY}"
          fi
        else
          echo "Invalid method you have specified ${{ inputs.method }}"
          exit 1
        fi

name: Test actions

on:
  push:
    branches:
      - main
  pull_request:
  workflow_dispatch:

jobs:
  test:
    name: Test actions
    runs-on: [self-hosted, linux, x64, vcpu-4, mem-4g]
    defaults:
      run:
        shell: bash
    outputs:
      timestamp: ${{ steps.dummy_file.outputs.timestamp }}
    steps:
      - name: Checkout the project
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.head.sha }}
          submodules: true
          fetch-depth: 0
      - name: Test lint action
        uses: ./lint
      - name: Test actionlint action
        uses: ./actionlint
      # Here geometry_tutorials repo is used as the source project and geometry2 repo is used as its dependency
      - name: Setup catkin workspace with a sample package
        run: |
          mkdir -p catkin_ws/src
          cd catkin_ws/src
          git clone https://github.com/ros/geometry_tutorials.git --depth=1 --branch=kinetic-devel project
          cd project
          rosinstall_generator geometry2 --rosdistro noetic --upstream | tee .rosinstall
          apt-get purge ssh -y -qq
      - name: Test setup_catkin_workspace action
        uses: ./setup_catkin_workspace
        with:
          catkin_workspace: catkin_ws
          cache_remote_path: s3://${{ secrets.AWS_S3_BUCKET_NAME }}
          cache_source_space_id: setup_catkin_workspace_source_space
      - name: Make trivial changes to C++ codes
        run: |
          cd catkin_ws/src/project
          find . -name '*.cpp' | xargs -I{} sed -i -E 's/Copyright/COPYRIGHT/g' {}
          sed -i 's@include_directories(@execute_process(COMMAND sleep 30)\ninclude_directories(@g' turtle_tf2/CMakeLists.txt
          git add .
          git config user.name "GITAI"
          git config user.email admin@gitai.tech
          git commit -m "trivial commit"
      - name: Test build_catkin_workspace action
        uses: ./build_catkin_workspace
        with:
          catkin_workspace: catkin_ws
          cache_remote_path: s3://${{ secrets.AWS_S3_BUCKET_NAME }}
      - name: Test test_catkin_workspace action (failure)
        uses: ./test_catkin_workspace
        with:
          catkin_workspace: catkin_ws
          catkin_test_targets: tf2_ros
        continue-on-error: true
      - name: Make changes to pass tests
        run: |
          cd catkin_ws/src/geometry2/tf2_ros
          sed -i 's@add_rostest(test/transform_listener_time_reset_test.launch)@@g' CMakeLists.txt
      - name: Test test_catkin_workspace action (success)
        uses: ./test_catkin_workspace
        with:
          catkin_workspace: catkin_ws
          catkin_test_targets: tf2_ros
      - name: Test lint_clang_tidy action (failure)
        uses: ./lint_clang_tidy
        with:
          path: catkin_ws/clang-tidy-results
        continue-on-error: true
      - name: Make changes to pass tests
        run: |
          cd catkin_ws/src/project
          echo '*.cpp' >> .lintignore
      - name: Test lint_clang_tidy action (success)
        uses: ./lint_clang_tidy
        with:
          path: catkin_ws/clang-tidy-results
      - name: Create dummy file to ./catkin_ws/build/dummy_file
        id: dummy_file
        run: |
          cd catkin_ws/build
          touch dummy_file
          echo timestamp=$(stat -c '%Y' dummy_file) >> $GITHUB_OUTPUT
      - name: Test save cache action
        uses: ./cache
        id: cache_build
        with:
          method: save
          path: ./catkin_ws/build
          remote_path: s3://${{ secrets.AWS_S3_BUCKET_NAME }}
      - name: Test docker run action
        uses: ./docker_run
        with:
          image: ubuntu:20.04
          entrypoint: /bin/bash
          args: -c "echo Test"

  test-cache:
    name: Test cache action
    runs-on: [self-hosted, linux, x64, vcpu-default, mem-default]
    needs: test
    steps:
      - name: Checkout the project
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.head.sha }}
          submodules: true
          fetch-depth: 0
      - name: Test check cache action
        id: check_cache_exists
        uses: ./cache
        with:
          method: check
          key: cache_build
          remote_path: s3://${{ secrets.AWS_S3_BUCKET_NAME }}
      - name: Test load cache action
        uses: ./cache
        with:
          method: load
          key: cache_build
          path: ./foo
          remote_path: s3://${{ secrets.AWS_S3_BUCKET_NAME }}
      - name: Check cache exists
        shell: bash
        run: |
          cd foo
          test $(ls -l | wc -l) -gt 1
          test "${{ steps.check_cache_exists.outputs.remote_path_exists }}" = "true"
      - name: Check dummy_file exists and timestamp is not modified
        shell: bash
        run: |
          cd foo
          test -e dummy_file
          test $(stat -c '%Y' dummy_file) -eq ${{ needs.test.outputs.timestamp }}
      - name: Test clear cache action
        uses: ./cache
        with:
          method: clear
          key: cache_build
          remote_path: s3://${{ secrets.AWS_S3_BUCKET_NAME }}
      - name: Test check cleared cache action
        id: check_cache_not_exists
        uses: ./cache
        with:
          method: check
          key: cache_build
          remote_path: s3://${{ secrets.AWS_S3_BUCKET_NAME }}
      - name: Test load cleared cache action
        uses: ./cache
        with:
          method: load
          key: cache_build
          path: ./bar
          remote_path: s3://${{ secrets.AWS_S3_BUCKET_NAME }}
      - name: Check cache does not exist
        shell: bash
        run: |
          cd bar
          test $(ls -l | wc -l) -eq 1
          test "${{ steps.check_cache_not_exists.outputs.remote_path_exists }}" = "false"
      - name: Test save local cache action
        uses: ./cache
        id: local_cache
        with:
          method: save
          path: ./foo
          remote_path: /_local
      - name: Test load local cache action
        uses: ./cache
        with:
          method: load
          key: local_cache
          path: ./baz
          remote_path: /_local
      - name: Check local cache exists
        shell: bash
        run: |
          cd baz
          test $(ls -l | wc -l) -gt 1
      - name: Load setup_catkin_workspace cached source space
        uses: ./cache
        with:
          method: load
          key: setup_catkin_workspace_source_space
          path: ./source_space
          remote_path: s3://${{ secrets.AWS_S3_BUCKET_NAME }}
      - name: Check setup_catkin_workspace cached source space
        shell: bash
        run: |
          # check if only dependencies in the workspace are cached
          cd source_space
          test -e geometry2
          test ! -e project/package.xml

  test-docker:
    name: Test setup_docker action
    runs-on: [self-hosted, linux, x64, vcpu-default, mem-default]
    steps:
      - name: Checkout the project
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.head.sha }}
          submodules: true
          fetch-depth: 0
      - name: Create Dockerfile for testing
        shell: bash
        run: |
          cat <<EOF > Dockerfile
          FROM alpine
          RUN uname -a
          EOF
      - name: Setup docker
        id: setup_docker
        uses: ./setup_docker
      - name: Check output variables
        shell: bash
        run: echo "${{ steps.setup_docker.outputs.platforms }}" | grep linux
      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          context: .
          pull: true
          platforms: linux/amd64,linux/arm64
